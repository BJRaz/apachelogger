package org.dyndns.tfud.ApacheLogger.Views;
/*
 * ApacheLogger.java
 *
 * Created on 18. september 2004, 11:29
 */

import java.io.*;
import java.net.*;
import java.util.regex.*;
import java.util.*;
import java.awt.event.*;
import ord.dyndns.tfud.ApacheLogger.VirtualHost;
/**
 *
 * @author  bjr
 */
public class ApacheLogger extends javax.swing.JFrame implements Runnable, ActionListener {
    private String[] data;
    private javax.swing.DefaultListModel model;
    private OutputStream out;
    private InputStream in;
    private PrintWriter pw;
    private Socket server;
    private int timeout;
    private String host;
    private boolean running;
    private VirtualHost activeVHost;
    
    private Vector virtualHosts;

    /** Creates new form ApacheLogger */
    public ApacheLogger() {
        model = new javax.swing.DefaultListModel();
        
        virtualHosts = new Vector();
        
        this.setTitle("Apache Virtualhost logger");
        
        running = true;
        host = "localhost";
        
        activeVHost = null;
       
        initComponents();
        lblMessage.setText("Listener stopped");
        jButton1.setEnabled(true);
        jButton2.setEnabled(false);
        jMenuItem2.addActionListener(this);
         
        jMenuItem2.setText("Set host");
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listVisitors = new javax.swing.JList();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        lblMessage = new javax.swing.JLabel();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.X_AXIS));

        jPanel1.setPreferredSize(new java.awt.Dimension(350, 400));
        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.X_AXIS));

        jScrollPane1.setPreferredSize(new java.awt.Dimension(200, 300));
        listVisitors.setFont(new java.awt.Font("Arial", 0, 11));

        listVisitors.setModel(model);
        listVisitors.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listVisitors.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listVisitorsMouseClicked(evt);
            }
        });

        jScrollPane1.setViewportView(listVisitors);

        jPanel2.add(jScrollPane1);

        jPanel1.add(jPanel2);

        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel3.setPreferredSize(new java.awt.Dimension(300, 300));
        jButton1.setText("Start");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel4.add(jButton1);

        jButton2.setText("Stop");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel4.add(jButton2);

        jPanel3.add(jPanel4, java.awt.BorderLayout.SOUTH);

        jPanel3.add(jPanel5, java.awt.BorderLayout.NORTH);

        jScrollPane2.setPreferredSize(new java.awt.Dimension(200, 300));
        jList1.setBackground(new java.awt.Color(212, 208, 200));
        jScrollPane2.setViewportView(jList1);

        jPanel6.add(jScrollPane2);

        jPanel3.add(jPanel6, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel3);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        lblMessage.setPreferredSize(new java.awt.Dimension(0, 20));
        getContentPane().add(lblMessage, java.awt.BorderLayout.SOUTH);

        jMenu4.setText("Menu");
        jMenuItem2.setText("Item");
        jMenuItem2.setName("File");
        jMenu4.add(jMenuItem2);

        jMenuBar2.add(jMenu4);

        setJMenuBar(jMenuBar2);

        pack();
    }//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        // STOP SERVER
        /*jButton1.setEnabled(true);
        jButton2.setEnabled(false);*/
        lblMessage.setText("Stopping...");
        running = false;        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        jButton1.setEnabled(false);
        
        lblMessage.setText("Starting...");
        if(running == false)
            running = true;
        new Thread(this).start();
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void showVisitors() {
        if(activeVHost != null) {
            javax.swing.DefaultListModel visitorModel = new javax.swing.DefaultListModel();
            String[] r = activeVHost.getVisitors();
            for(int i=0;i<r.length;i++)
                visitorModel.addElement(r[i]);
            jList1.setModel(visitorModel);
        }
    }
    
    private void listVisitorsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listVisitorsMouseClicked
        // TODO add your handling code here:
           
        activeVHost = (VirtualHost)listVisitors.getSelectedValue();
        this.showVisitors();
    }//GEN-LAST:event_listVisitorsMouseClicked
    
    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm
    
    public String getHost() {
        return this.host;
    }
    
    public void setHost(String host) {
        this.host = host;
    }
    /**
     *	Connection to the server (from apps host variable) is made
     **/
    public void connectToServer() {
        lblMessage.setText("Connecting to: " + getHost());
        try {
            
            // TEST
            timeout = 5000;
            
            
            while(running) {
                
                resetVirtualHosts();                
                /**
                 *	Socket to server is established
                 **/
                server = new Socket(this.getHost(), 8901);
                lblMessage.setText("Listener connected to: " + this.getHost());
                jButton2.setEnabled(true);
                out = server.getOutputStream();
                in = server.getInputStream();
                
                /**
                 *	Wraps buffers to input-stream
                 **/
                BufferedReader bin = new BufferedReader(new InputStreamReader(in));
                
                String res = "";
                
                while((res = bin.readLine()) != null) {
                    
                    /**
                     *	PATTERN MATCHING
                     *
                     **/
                    
                    Pattern pattern;
                    Matcher matcher;
                    
                    String hosts = "(\\s([a-zA-z0-9-_]+\\.)+[a-z]{2,3}\\s)|((\\d{1,3}\\.)+\\d{1,3})";
                    //"(\\d{1,3}.\\d{1,3}.\\d{1,3}.\\d{1,3}){1}";
                    String date = "\\d{2}\\/\\w{3}\\/\\d{4}";
                    
                    
                    String virtualhost = res.substring(0, res.indexOf(":"));
                    virtualhost = (virtualhost.trim());
                    String[] vhosts = res.split(":");
                    
                    
                    String ip = vhosts[1].substring(0, vhosts[1].indexOf('-')).trim();
                    System.out.println(ip);
                    
                    VirtualHost temp = new VirtualHost(vhosts[0].trim());
                    if(!virtualHosts.contains(temp)) {
                        temp.addVisitor(ip);
                        virtualHosts.add(temp);
                        model.addElement(temp);
                        System.out.println("New added");
                    } else {
                        // HVIS DER FINDES EN VIRUALHOST - Sï¿½ ADD VISITOR
                        int index = virtualHosts.indexOf(temp);
                        ((VirtualHost)virtualHosts.get(index)).addVisitor(ip);
                        System.out.println("Add to existing");
                    }
                    temp = null;
                    
                    
                }
                listVisitors.repaint();
                this.showVisitors();
                new Thread().sleep(timeout);
                
                /**
                 *	calls internal method
                 **/
                /*System.out.println(visitors);
                Enumeration enum = visitors.elements();
                 
                String all = "";
                while(enum.hasMoreElements()) {
                    Visitor temp = (Visitor)enum.nextElement();
                    all += temp.toString() + "\n";
                }
                stat.setText("Visitors: " + visitors.size() + "\n\n" + all);
                 
                displayTimeOut();
                 */
                in.close();
                out.close();
                server.close();
            }
            
        } catch(IOException io){
            System.out.println("Error in I/O - inputstream failed (is host available)? ; " + io.getMessage() + "\n");
            javax.swing.JOptionPane.showMessageDialog(this, "Server: '" + this.getHost() + "' not responding\n" + io.getMessage());
            
        }  catch(InterruptedException ie){
            System.out.println("Thread failed - interrupted ; " + ie.getMessage() + "\n");
        }  finally {
            running = false;
            lblMessage.setText("Listener stopped");
            jButton1.setEnabled(true);
            jButton2.setEnabled(false);
            
        }
       
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        new ApacheLogger().show();
    }
    
    public void run() {
        connectToServer();
    }
    
    public void resetVirtualHosts() {
        Enumeration enum = virtualHosts.elements();
        while(enum.hasMoreElements()) {
            ((VirtualHost)enum.nextElement()).clearVisitors();            
        }
        
    }
    
    public void actionPerformed(java.awt.event.ActionEvent actionEvent) {
        ConfigDialog config = new ConfigDialog(ApacheLogger.this);                  
        
    }    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JList jList1;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblMessage;
    private javax.swing.JList listVisitors;
    // End of variables declaration//GEN-END:variables
    
}

